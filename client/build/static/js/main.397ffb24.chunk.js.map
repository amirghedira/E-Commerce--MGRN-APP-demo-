{"version":3,"sources":["pages/Home/Home.module.css","assets/img/headerpic.png","components/Footers/Footer.js","Context/GlobalContext.js","components/Navbars/IndexNavbar.js","components/Loading/Loading.js","pages/Home/ProductCard/ProductCard.js","pages/Home/Home.js","pages/Login/Login.js","pages/Signup/Signup.js","pages/Product/Product.js","pages/Profile/ProfileField/ProfileField.js","pages/Profile/Profile.js","components/FormatDate/FormatDate.js","utils/AuthGuard.js","pages/Orders/Orders.js","pages/Order/OrderField/OrderField.js","pages/Order/Order.js","components/Headers/IndexHeader.js","Context/AppContext.js","pages/Purchase/Purchase.js","App.js","index.js","pages/Home/ProductCard/ProductCard.module.css","pages/Order/Order.module.css","pages/Purchase/Order.module.css"],"names":["module","exports","Footer","className","Container","Row","Date","getFullYear","React","createContext","products","token","IndexNavbar","useState","navbarColor","setNavbarColor","navbarCollapse","setNavbarCollapse","context","useContext","GlobalContext","useEffect","updateNavbarColor","document","documentElement","scrollTop","body","window","addEventListener","removeEventListener","Navbar","classnames","expand","NavbarBrand","data-placement","title","to","tag","Link","aria-expanded","toggled","onClick","classList","toggle","Collapse","navbar","isOpen","Nav","user","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","username","DropdownMenu","right","DropdownItem","divider","disconnectUser","style","margin","type","color","height","width","NavItem","Button","Loading","display","backgroundColor","position","top","left","zIndex","marginTop","ProductCard","props","Col","xs","classes","cardProduct","justifyContent","productImage","src","imageUrl","alt","alignContent","id","marginBottom","price","FETCH_PRODUCTS_QUERY","gql","Home","useQuery","loading","data","mainHome","getProducts","map","product","key","_id","LOGIN_USER_QUERY","Login","history","useHistory","errorLogin","setErrorLogin","useLazyQuery","onCompleted","response","userLogin","status","setUser","localStorage","setItem","setToken","push","loginUser","lg","Card","Form","Input","placeholder","onClickCapture","block","getElementById","value","password","variables","href","e","preventDefault","SignUp","FETCH_PRODUCT_QUERY","Product","productId","match","params","paddingTop","paddingBottom","getProduct","fontWeight","fontSize","minHeight","whiteSpace","paddingLeft","paddingRight","description","ProfileField","setStatus","defaultValue","alignItems","marginLeft","marginRight","updateUser","phone","email","address","aria-hidden","UPDATE_USERINFO_MUTATION","Profile","userInfo","setUserInfo","useMutation","console","log","onError","err","updateUserInfo","newUserInfos","FormateDate","nowday","toISOString","split","nowyear","nowhour","day","children","year","hour","Fragment","format","fromNow","AuthGuard","FETCH_ORDERS_QUERY","Orders","orders","setOrders","filterOption","setFilterOption","getUserOrders","filter","order","Table","slice","reverse","index","scope","length","date","quantity","totalPrice","OrderField","name","icon","iconColor","UPDATE_ORDER_MUTATION","FETCH_ORDER_QUERY","Order","setOrder","orderId","getOrder","isEditingQuantity","setIsEdidingQuantity","orderQuantity","setOrderQuantity","updateQuantityOrder","cancelOrder","validateOrder","mainContainer","orderContainer","min","onChange","target","IndexHeader","backgroundPositionX","backgroundPositionY","backgroundImage","require","FETCH_CONNECTEDUSER_QUERY","AppContext","getItem","getConnectedUser","Provider","removeItem","ORDER_PRODUCT_MUTATION","Purchase","setQuatity","update","proxy","orderProduct","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","path","component","ReactDOM","render"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,SAAW,yB,0DCD7BD,EAAOC,QAAU,IAA0B,uC,yLCwB5BC,MAjBf,WACI,OACI,4BAAQC,UAAU,oCACd,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,yBAAKF,UAAU,mBACX,0BAAMA,UAAU,aAAhB,SACO,IAAIG,MAAOC,cADlB,cAC4C,IACxC,uBAAGJ,UAAU,sBAFjB,yB,iHCVTK,MAAMC,cAAc,CAC/BC,SAAU,GACVC,MAAO,O,iBC+IIC,MA/Hf,WAAwB,IAAD,EACmBJ,IAAMK,SAAS,sBADlC,mBACZC,EADY,KACCC,EADD,OAEyBP,IAAMK,UAAS,GAFxC,mBAEZG,EAFY,KAEIC,EAFJ,KAGbC,EAAUV,IAAMW,WAAWC,GA6BjC,OArBAZ,IAAMa,WAAU,WACZ,IAAMC,EAAoB,WAElBC,SAASC,gBAAgBC,UAAY,KACrCF,SAASG,KAAKD,UAAY,IAE1BV,EAAe,KAEfQ,SAASC,gBAAgBC,UAAY,KACrCF,SAASG,KAAKD,UAAY,MAE1BV,EAAe,uBAMvB,OAFAY,OAAOC,iBAAiB,SAAUN,GAE3B,WACHK,OAAOE,oBAAoB,SAAUP,OAIzC,kBAACQ,EAAA,EAAD,CAAQ3B,UAAW4B,IAAW,YAAajB,GAAckB,OAAO,MAC5D,kBAAC5B,EAAA,EAAD,KACI,yBAAKD,UAAU,oBACX,kBAAC8B,EAAA,EAAD,CACIC,iBAAe,SACfC,MAAM,wBACNC,GAAG,QACHC,IAAKC,KAJT,cASA,4BACIC,gBAAevB,EACfb,UAAW4B,IAAW,gCAAiC,CACnDS,QAASxB,IAEbyB,QA5CS,WACzBxB,GAAmBD,GACnBO,SAASC,gBAAgBkB,UAAUC,OAAO,cA4C1B,0BAAMxC,UAAU,4BAChB,0BAAMA,UAAU,4BAChB,0BAAMA,UAAU,8BAGxB,kBAACyC,EAAA,EAAD,CACIzC,UAAU,sBACV0C,QAAM,EACNC,OAAQ9B,GAEPE,EAAQP,MACL,kBAACoC,EAAA,EAAD,CAAKF,QAAM,GAGH3B,EAAQ8B,KACJ,kBAACC,EAAA,EAAD,CAAsBC,KAAG,EAACC,UAAQ,GAC9B,kBAACC,EAAA,EAAD,CAAgBF,KAAG,EAACG,OAAK,GACpBnC,EAAQ8B,KAAKM,UAElB,kBAACC,EAAA,EAAD,CAAcC,OAAK,GACf,kBAACC,EAAA,EAAD,CAAcpB,IAAKC,IAAMF,GAAG,WAA5B,UAGA,kBAACqB,EAAA,EAAD,CAAcpB,IAAKC,IAAMF,GAAE,YAA3B,YAGA,kBAACqB,EAAA,EAAD,CAAcC,SAAO,IACrB,kBAACD,EAAA,EAAD,CAAchB,QAASvB,EAAQyC,gBAC3B,iDAKZ,kBAAC,IAAD,CACIC,MAAO,CAAEC,OAAQ,QACjBC,KAAK,QACLC,MAAM,UACNC,OAAQ,GACRC,MAAO,MAOvB,kBAAClB,EAAA,EAAD,CAAKF,QAAM,GACP,kBAACqB,EAAA,EAAD,KACI,kBAAC,IAAD,CAAM9B,GAAG,UACL,kBAAC+B,EAAA,EAAD,CACIhE,UAAU,YACV4D,MAAM,WAFV,WASR,kBAACG,EAAA,EAAD,KACI,kBAAC,IAAD,CAAM9B,GAAG,WACL,kBAAC+B,EAAA,EAAD,CACIhE,UAAU,YACV4D,MAAM,UAFV,kB,mDClHrBK,EAfC,WACZ,OACI,yBAAKR,MAAO,CAAES,QAAS,OAAQC,gBAAiB,kBAAmBC,SAAU,QAASC,IAAK,IAAKC,KAAM,IAAKR,MAAO,QAASD,OAAQ,QAASU,OAAQ,SAChJ,kBAAC,IAAD,CACId,MAAO,CAAEC,OAAQ,OAAQc,UAAW,SACpCb,KAAK,YACLC,MAAM,UACNC,OAAQ,GACRC,MAAO,O,0BCiBRW,EAxBK,SAACC,GACjB,OACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAI5E,UAAW6E,IAAQC,aAC3B,yBAAKrB,MAAO,CAAES,QAAS,OAAQa,eAAgB,WAC3C,yBAAK/E,UAAW6E,IAAQG,aAAcC,IAAKP,EAAMQ,SAAUC,IAAI,SAEnE,yBAAK1B,MAAO,CAAEe,UAAW,OAAQN,QAAS,OAAQa,eAAgB,SAAUK,aAAc,WACtF,6BACI,kBAAC,IAAD,CAAMnD,GAAE,mBAAcyC,EAAMW,KACxB,wBAAI5B,MAAO,CAAES,QAAS,OAAQa,eAAgB,SAAUO,aAAc,SAClE,gCAASZ,EAAM1C,SAGvB,wBAAIyB,MAAO,CAAES,QAAS,OAAQa,eAAgB,SAAUO,aAAc,SAAWZ,EAAMa,MAAvF,KACA,kBAACvB,EAAA,EAAD,CAAQJ,MAAM,UAAUH,MAAO,CAAES,QAAS,OAAQR,OAAQ,OAAQI,MAAO,SAAW5B,IAAKC,IAAMF,GAAE,oBAAeyC,EAAMW,KAAtH,gB,qNCTpB,IAAMG,EAAuBC,IAAH,KAsCXC,EAxBF,WAAO,IAAD,EAEWC,YAASH,GAA3BI,EAFO,EAEPA,QAASC,EAFF,EAEEA,KAEjB,OACI,yBAAK7F,UAAW6E,IAAQiB,UACpB,kBAAC7F,EAAA,EAAD,KACK2F,EACG,kBAAC,EAAD,MAEA,kBAAC1F,EAAA,EAAD,KACK2F,EAAKE,YAAYxF,SAASyF,KAAI,SAAAC,GAC3B,OAEI,kBAAC,EAAD,CAAaC,IAAKD,EAAQE,IAAKnE,MAAOiE,EAAQjE,MAAOkD,SAAUe,EAAQf,SAAUG,GAAIY,EAAQE,IAAKZ,MAAOU,EAAQV,e,qUC7BjJ,IAAMa,EAAmBX,IAAH,KA2FPY,EAvED,WAEV,IAAMtF,EAAUV,IAAMW,WAAWC,GAC3BqF,EAAUC,cAHA,EAIoBlG,IAAMK,SAAS,IAJnC,mBAIT8F,EAJS,KAIGC,EAJH,OAMIC,YAAaN,EAAkB,CAC/CO,YAAa,SAAAC,GACyB,MAA9BA,EAASC,UAAUC,OACnBL,EAAc,sBAEd1F,EAAQgG,QAAQH,EAASC,UAAUhE,MACnCmE,aAAaC,QAAQ,QAASL,EAASC,UAAUrG,OACjDO,EAAQmG,SAASN,EAASC,UAAUrG,OACpC8F,EAAQa,KAAK,aARlBC,EANS,oBA8BhB,OACI,6BACI,6BACI,yBAAKpH,UAAU,WACf,kBAACC,EAAA,EAAD,CAAWwD,MAAO,CAAEe,UAAW,UAC3B,kBAACtE,EAAA,EAAD,KACI,kBAACyE,EAAA,EAAD,CAAK3E,UAAU,kBAAkBqH,GAAG,KAChC,kBAACC,EAAA,EAAD,CAAMtH,UAAU,iCACZ,wBAAIA,UAAU,iBAAd,WACA,kBAACuH,EAAA,EAAD,CAAMvH,UAAU,iBACZ,2CACA,kBAACwH,EAAA,EAAD,CAAOC,YAAY,WAAWpC,GAAG,WAAW1B,KAAK,OAAO+D,eAAgB,kBAAMjB,EAAc,OAC5F,2CACA,kBAACe,EAAA,EAAD,CAAOC,YAAY,WAAWpC,GAAG,WAAW1B,KAAK,WAAW+D,eAAgB,kBAAMjB,EAAc,OAChG,2BAAOhD,MAAO,CAAES,QAAS,OAAQa,eAAgB,WAAayB,GAC9D,kBAACxC,EAAA,EAAD,CAAQ2D,OAAK,EAAC3H,UAAU,YAAY4D,MAAM,SAAStB,QA1B9D,WACjB,IAAMa,EAAW/B,SAASwG,eAAe,YAAYC,MAC/CC,EAAW1G,SAASwG,eAAe,YAAYC,MAErDT,EAAU,CACNW,UAAW,CACP5E,WACA2E,gBAmBoB,UAKJ,yBAAK9H,UAAU,UACX,kBAACgE,EAAA,EAAD,CACIhE,UAAU,WACV4D,MAAM,SACNoE,KAAK,SACL1F,QAAS,SAAC2F,GAAD,OAAOA,EAAEC,mBAJtB,4BC3BrBC,EAhDA,WAEX,OACI,6BACI,6BACI,yBAAKnI,UAAU,WACf,kBAACC,EAAA,EAAD,CAAWwD,MAAO,CAAEe,UAAW,UAC3B,kBAACtE,EAAA,EAAD,KACI,kBAACyE,EAAA,EAAD,CAAK3E,UAAU,kBAAkBqH,GAAG,KAChC,kBAACC,EAAA,EAAD,CAAMtH,UAAU,iCACZ,wBAAIA,UAAU,iBAAd,WACA,kBAACuH,EAAA,EAAD,CAAMvH,UAAU,iBACZ,2CACA,kBAACwH,EAAA,EAAD,CAAOC,YAAY,WAAW9D,KAAK,SACnC,wCACA,kBAAC6D,EAAA,EAAD,CAAOC,YAAY,QAAQ9D,KAAK,SAChC,2CACA,kBAAC6D,EAAA,EAAD,CAAOC,YAAY,WAAW9D,KAAK,aACnC,8CACA,kBAAC6D,EAAA,EAAD,CAAOC,YAAY,aAAa9D,KAAK,aACrC,+CACA,kBAAC6D,EAAA,EAAD,CAAOC,YAAY,UAAU9D,KAAK,SAClC,0CACA,kBAAC6D,EAAA,EAAD,CAAOC,YAAY,UAAU9D,KAAK,SAClC,kBAACK,EAAA,EAAD,CAAQ2D,OAAK,EAAC3H,UAAU,YAAY4D,MAAM,UAA1C,aAIJ,yBAAK5D,UAAU,UACX,kBAACgE,EAAA,EAAD,CACIhE,UAAU,WACV4D,MAAM,SACNoE,KAAK,SACL1F,QAAS,SAAC2F,GAAD,OAAOA,EAAEC,mBAJtB,4B,qXC1BpC,IAAME,EAAsB3C,IAAH,KAkEV4C,EA7CC,SAAC3D,GAAW,IAAD,EAEGiB,YAASyC,EAAqB,CACpDL,UAAW,CACPO,UAAW5D,EAAM6D,MAAMC,OAAOnD,MAF9BQ,EAFe,EAEfA,KAAMD,EAFS,EAETA,QAKd,OACI,6BACI,6BACI,kBAAC3F,EAAA,EAAD,CAAWwD,MAAO,CAAEgF,WAAY,QAASC,cAAe,UACnD9C,EACG,kBAAC,EAAD,MAGA,kBAAC1F,EAAA,EAAD,KACI,kBAACyE,EAAA,EAAD,CAAKC,GAAG,KACJ,yBAAKd,MAAM,MAAMmB,IAAKY,EAAK8C,WAAW1C,QAAQf,SAAUC,IAAI,QAC5D,yBAAK1B,MAAO,CAAES,QAAS,OAAQa,eAAgB,WAC3C,wBAAItB,MAAO,CAAEmF,WAAY,OAAQC,SAAU,SAA3C,WAA8DhD,EAAK8C,WAAW1C,QAAQV,MAAtF,OAGR,kBAACZ,EAAA,EAAD,CAAKC,GAAG,KACJ,yBAAKnB,MAAO,CAAEe,UAAW,OAAQN,QAAS,OAAQa,eAAgB,WAC9D,wBAAItB,MAAO,CAAEmF,WAAY,MAAQ/C,EAAK8C,WAAW1C,QAAQjE,QAE7D,yBAAKyB,MAAO,CAAES,QAAS,OAAQa,eAAgB,SAAU+D,UAAW,QAAStE,UAAW,OAAQuE,WAAY,WAAYC,YAAa,OAAQC,aAAc,SACtJpD,EAAK8C,WAAW1C,QAAQiD,aAE7B,yBAAKzF,MAAO,CAAES,QAAS,OAAQa,eAAgB,WAC3C,kBAACf,EAAA,EAAD,CAAQJ,MAAM,UAAU1B,IAAKC,IAAMF,GAAE,oBAAe4D,EAAK8C,WAAW1C,QAAQE,MAA5E,mBCErBgD,GAxDM,SAACzE,GAAW,IAAD,EAEArE,IAAMK,UAAS,GAFf,mBAErBoG,EAFqB,KAEbsC,EAFa,KAG5B,OACI,kBAAClJ,EAAA,EAAD,CAAKuD,MAAO,CAAEgF,WAAY,OAAQO,YAAa,SAC3C,kBAACrE,EAAA,EAAD,CAAKC,GAAG,IAAInB,MAAO,CAAES,QAAS,SAC1B,wBAAIT,MAAO,CAAEmF,WAAY,OAAQC,SAAU,OAAQnF,OAAQ,SAAWgB,EAAM1C,QAEhF,kBAAC2C,EAAA,EAAD,CAAKC,GAAIkC,EAAS,IAAM,IAAKrD,MAAO,CAAES,QAAS,OAAQa,eAAgB,WAEnE,6BACK+B,EACGpC,EAAMoD,SACF,6BACI,kBAACN,EAAA,EAAD,CAAO/D,MAAO,CAAEC,OAAQ,OAAQmF,SAAU,QAAUpB,YAAY,WAAW9D,KAAMe,EAAMf,OACvF,kBAAC6D,EAAA,EAAD,CAAO/D,MAAO,CAAEC,OAAQ,OAAQmF,SAAU,QAAUpB,YAAY,oBAAoB9D,KAAMe,EAAMf,QAIpG,kBAAC6D,EAAA,EAAD,CAAOnC,GAAIX,EAAMW,GAAI5B,MAAO,CAAEC,OAAQ,OAAQmF,SAAU,QAAUQ,aAAc3E,EAAMmD,MAAOlE,KAAMe,EAAMf,OAE7G,wBAAI0B,GAAIX,EAAMW,GAAI5B,MAAO,CAAEC,OAAQ,SAAWgB,EAAMmD,SAMhE,kBAAClD,EAAA,EAAD,CAAKlB,MAAO,CAAES,QAAS,OAAQa,eAAgB,WAAYuE,WAAY,WAElExC,EAAS,yBAAKrD,MAAO,CAAES,QAAS,OAAQa,eAAgB,WAAYuE,WAAY,WAC7E,kBAACtF,EAAA,EAAD,CAAQJ,MAAM,UAAUH,MAAO,CAAE8F,WAAY,OAAQC,YAAa,QAC9DlH,QAAS,WACL8G,GAAU,GACV1E,EAAM+E,WAAW,CACbtG,SAAU/B,SAASwG,eAAe,YAAYC,MAC9C6B,MAAOtI,SAASwG,eAAe,SAASC,MACxC8B,MAAOvI,SAASwG,eAAe,SAASC,MACxC+B,QAASxI,SAASwG,eAAe,WAAWC,UAPxD,QAaA,kBAAC7D,EAAA,EAAD,CAAQJ,MAAM,SAAStB,QAAS,WAAQ8G,GAAU,KAAlD,WAKA,uBAAG3F,MAAO,CAAEoF,SAAU,OAAQjF,MAAO,SAAW5D,UAAU,wBAAwB6J,cAAY,OAC1FvH,QAAS,WAAQ8G,GAAU,S,wYC7CnD,IAAMU,GAA2BrE,IAAH,MA8EfsE,GA9DC,WAEZ,IAAMhJ,EAAUV,IAAMW,WAAWC,GAFf,EAGcZ,IAAMK,SAAS,MAH7B,mBAGXsJ,EAHW,KAGDC,EAHC,KAKlB5J,IAAMa,WAAU,WACRH,EAAQP,OAASO,EAAQ8B,MACzBoH,EAAYlJ,EAAQ8B,QAEzB,CAAC9B,EAAQP,MAAOO,EAAQ8B,OATT,MAUOqH,YAAYJ,GAA0B,CAC3DnD,YAAa,SAAAd,GACTsE,QAAQC,IAAIvE,IAEhBwE,QAAS,SAAAC,GACLH,QAAQC,IAAIE,MALbC,EAVW,oBA0ClB,OAAKP,EAGD,6BACI,kBAAC/J,EAAA,EAAD,KACI,8CACA,yBAAKwD,MAAO,CAAEgF,WAAY,OAAQC,cAAe,SAC7C,kBAAC,GAAD,CAAcrD,GAAG,WAAWrD,MAAM,WAAW6F,MAAOmC,EAAS7G,SAAUQ,KAAK,OAAO8F,WA9BrE,SAACe,GAC3BD,EAAe,CAAExC,UAAU,2BAAMiC,GAAP,IAAiB7G,SAAUqH,EAAarH,aAClE8G,EAAY,2BAAKD,GAAN,IAAgB7G,SAAUqH,EAAarH,eA6BtC,kBAAC,GAAD,CAAckC,GAAG,QAAQrD,MAAM,QAAQ6F,MAAOmC,EAASL,MAAOhG,KAAK,OAAO8F,WA1B/D,SAACe,GACxBD,EAAe,CAAExC,UAAU,2BAAMiC,GAAP,IAAiBL,MAAOa,EAAab,UAC/DM,EAAY,2BAAKD,GAAN,IAAgBL,MAAOa,EAAab,YAyBnC,kBAAC,GAAD,CAActE,GAAG,WAAWrD,MAAM,WAAW8F,UAAQ,EAACD,MAAM,UAAUlE,KAAK,WAAW8F,WAjBxE,SAACe,OAkBf,kBAAC,GAAD,CAAcnF,GAAG,QAAQrD,MAAM,eAAe6F,MAAOmC,EAASN,MAAO/F,KAAK,SAAS8F,WAfxE,SAACe,GACxBD,EAAe,CAAExC,UAAU,2BAAMiC,GAAP,IAAiBN,MAAOc,EAAad,UAC/DO,EAAY,2BAAKD,GAAN,IAAgBN,MAAOc,EAAad,YAcnC,kBAAC,GAAD,CAAcrE,GAAG,UAAUrD,MAAM,UAAU6F,MAAOmC,EAASJ,QAASjG,KAAK,WAAW8F,WAxBvE,SAACe,GAC1BD,EAAe,CAAExC,UAAU,2BAAMiC,GAAP,IAAiBJ,QAASY,EAAaZ,YACjEK,EAAY,2BAAKD,GAAN,IAAgBJ,QAASY,EAAaZ,iBAY1C,kBAAC,EAAD,O,8BC1BAa,GAtCK,SAAC/F,GACjB,IAAMgG,IAAW,IAAIvK,MAAOwK,cAAcC,MAAM,KAAK,GAAGA,MAAM,KAAK,GAC7DC,IAAY,IAAI1K,MAAOwK,cAAcC,MAAM,KAAK,GAAGA,MAAM,KAAK,GAC9DE,IAAY,IAAI3K,MAAOwK,cAAcC,MAAM,KAAK,GAAGA,MAAM,KAAK,GAC9DG,GAAQrG,EAAMsG,SAASJ,MAAM,KAAK,GAAGA,MAAM,KAAK,GAChDK,GAASvG,EAAMsG,SAASJ,MAAM,KAAK,GAAGA,MAAM,KAAK,GACjDM,GAASxG,EAAMsG,SAASJ,MAAM,KAAK,GAAGA,MAAM,KAAK,GAEvD,OAAIK,IAASJ,EACLE,IAAQL,EACJQ,EAAOJ,EAAU,GAEb,kBAAC,IAAMK,SAAP,aACU,KACN,kBAAC,KAAD,CAAQC,OAAO,SAAS1G,EAAMsG,WAMlC,kBAAC,KAAD,CAAQK,SAAO,GAAE3G,EAAMsG,UAE1BD,IAAQL,EAAS,EAElB,kBAAC,IAAMS,SAAP,iBACc,KACV,kBAAC,KAAD,CAAQC,OAAO,SAAS1G,EAAMsG,WAI9B,kBAAC,KAAD,CAAQI,OAAO,mBAAmB1G,EAAMsG,UAIhD,kBAAC,KAAD,CAAQI,OAAO,kBAAkB1G,EAAMsG,WCtBpCM,GATG,SAAC5G,GAEf,OAAsB,OADNrE,IAAMW,WAAWC,GACrBT,MACDkE,EAAMsG,SAEV,kBAAC,IAAD,CAAU/I,GAAG,Y,+ZCFxB,IAAMsJ,GAAqB9F,IAAH,MAmIT+F,GA/GA,WAEX,IAAMzK,EAAUC,qBAAWC,GAFV,EAGWZ,IAAMK,SAAS,MAH1B,mBAGV+K,EAHU,KAGFC,EAHE,OAIS/F,YAAS4F,IAA3B3F,EAJS,EAITA,QAASC,EAJA,EAIAA,KAJA,EAKuBxF,IAAMK,SAAS,GALtC,mBAKViL,EALU,KAKIC,EALJ,KA2CjB,OApCAvL,IAAMa,WAAU,WACP0E,IAED8F,EAAU7F,EAAKgG,cAAcJ,QAC7B1K,EAAQ2K,UAAU7F,EAAKgG,cAAcJ,WAE1C,CAAC7F,EAASC,EAAM9E,IAEnBV,IAAMa,WAAU,WACZ,OAAQyK,GACJ,KAAK,EAEGD,EAAU3K,EAAQ0K,OAAOK,QAAO,SAAAC,GAAK,MAAqB,WAAjBA,EAAMjF,WAC/C,MAER,KAAK,EAGG4E,EAAU3K,EAAQ0K,OAAOK,QAAO,SAAAC,GAAK,MAAqB,WAAjBA,EAAMjF,WAC/C,MAER,KAAK,EAGG4E,EAAU3K,EAAQ0K,OAAOK,QAAO,SAAAC,GAAK,MAAqB,aAAjBA,EAAMjF,WAC/C,MAER,QAEQ4E,EAAU3K,EAAQ0K,WAI/B,CAACE,EAAc5K,EAAQ0K,SAGtB7F,EACO,kBAAC,EAAD,MAGP,kBAAC,GAAD,KACI,6BACI,kBAAC3F,EAAA,EAAD,CAAWwD,MAAO,CAAEe,UAAW,QAASc,aAAc,UAClD,kBAACpF,EAAA,EAAD,CAAKuD,MAAO,CAAEe,UAAW,OAAQc,aAAc,SAC3C,kBAACX,EAAA,EAAD,CAAKC,GAAG,KAAKnB,MAAO,CAAES,QAAS,OAAQa,eAAgB,WACnD,kBAACf,EAAA,EAAD,CAAQJ,MAAwB,IAAjB+H,EAAqB,OAAS,KAAMlI,MAAO,CAAEC,OAAQ,QAAUpB,QAAS,WAAQsJ,EAAgB,KAA/G,cAGA,kBAAC5H,EAAA,EAAD,CAAQJ,MAAwB,IAAjB+H,EAAqB,OAAS,KAAMlI,MAAO,CAAEC,OAAQ,QAAUpB,QAAS,WAAQsJ,EAAgB,KAA/G,iBAGA,kBAAC5H,EAAA,EAAD,CAAQJ,MAAwB,IAAjB+H,EAAqB,OAAS,KAAMlI,MAAO,CAAEC,OAAQ,QAAUpB,QAAS,WAAQsJ,EAAgB,KAA/G,iBAGA,kBAAC5H,EAAA,EAAD,CAAQJ,MAAwB,IAAjB+H,EAAqB,OAAS,KAAMlI,MAAO,CAAEC,OAAQ,QAAUpB,QAAS,WAAQsJ,EAAgB,KAA/G,qBAKR,kBAACI,GAAA,EAAD,KACI,+BACI,4BACI,iCACA,oCACA,uCACA,wCACA,2CACA,wCAGR,+BACKP,EAAOQ,MAAM,GAAGC,UAAUlG,KAAI,SAAC+F,EAAOI,GAEnC,OACI,wBAAIjG,IAAK6F,EAAM5F,KACX,wBAAIiG,MAAM,OAAM,kBAAC,IAAD,CAAMnK,GAAE,iBAAY8J,EAAM5F,MAAO,4BAAQ1C,MAAO,CAAEmF,WAAY,SAAW6C,EAAOY,OAASF,KACzG,4BAAI,kBAAC,GAAD,KAAcJ,EAAMO,OACxB,4BAAI,kBAAC,IAAD,CAAMrK,GAAE,mBAAc8J,EAAM9F,QAAQE,MAAO,4BAAQ1C,MAAO,CAAEmF,WAAY,SAAWmD,EAAM9F,QAAQjE,SACrG,4BAAK+J,EAAMQ,UACX,4BAAKR,EAAMS,WAAX,MACA,4BAEyB,WAAjBT,EAAMjF,OACF,uBAAG9G,UAAU,uBAAuByD,MAAO,CAAEoF,SAAU,OAAQD,WAAY,OAAQhF,MAAO,WAEzE,WAAjBmI,EAAMjF,OACF,uBAAG9G,UAAU,uBAAuByD,MAAO,CAAEoF,SAAU,OAAQD,WAAY,OAAQhF,MAAO,YAE1F,uBAAG5D,UAAU,YAAYyD,MAAO,CAAEoF,SAAU,OAAQD,WAAY,OAAQhF,MAAO,oB,oBCtGxH6I,GApBI,SAAC/H,GAChB,OACI,kBAACxE,EAAA,EAAD,CAAKuD,MAAO,CAAEgF,WAAY,OAAQC,cAAe,OAAQxE,QAAS,OAAQoF,WAAY,WAClF,kBAAC3E,EAAA,EAAD,CAAKC,GAAG,KACJ,wBAAInB,MAAO,CAAEC,OAAQ,EAAGkF,WAAY,OAAQC,SAAU,SACjDnE,EAAMgI,KADX,MAIJ,kBAAC/H,EAAA,EAAD,CAAKlB,MAAO,CAAES,QAAS,OAAQa,eAAgB,WAC3C,wBAAItB,MAAO,CAAEC,OAAQ,EAAGkF,WAAY,QAC/BlE,EAAMiI,MACH,uBAAG3M,UAAW0E,EAAMiI,KAAMlJ,MAAO,CAAEoF,SAAU,OAAQD,WAAY,OAAQhF,MAAOc,EAAMkI,UAAWpD,YAAa,UACjH9E,EAAMmD,U,0xBCF3B,IAAMgF,GAAwBpH,IAAH,MAUrBqH,GAAoBrH,IAAH,MA4KRsH,GApJD,SAACrI,GAAW,IAAD,EAEKrE,IAAMK,SAAS,MAFpB,mBAEdqL,EAFc,KAEPiB,EAFO,KAGrBrH,YAASmH,GAAmB,CACxB/E,UACI,CAAEkF,QAASvI,EAAM6D,MAAMC,OAAOnD,IAElCsB,YAAa,SAAAC,GACTuD,QAAQC,IAAIxD,EAASsG,UACrBF,EAASpG,EAASsG,SAASnB,UATd,MAc6B1L,IAAMK,UAAS,GAd5C,mBAcdyM,EAdc,KAcKC,EAdL,OAgBqB/M,IAAMK,SAAS,GAhBpC,mBAgBd2M,EAhBc,KAgBCC,EAhBD,OAkBSpD,YAAY2C,GAAuB,CAC7DlG,YAAa,WACTqG,EAAS,2BAAKjB,GAAN,IAAaQ,SAAUc,MAEnCtF,UAAW,CACPkF,QAASvI,EAAM6D,MAAMC,OAAOnD,GAC5BkH,SAAUc,EACVvG,OAAM,OAAEiF,QAAF,IAAEA,OAAF,EAAEA,EAAOjF,UAPhByG,EAlBc,sBA4BCrD,YAAY2C,GAAuB,CACrDlG,YAAa,WACTqG,EAAS,2BAAKjB,GAAN,IAAajF,OAAQ,eAGjCiB,UAAW,CACPkF,QAASvI,EAAM6D,MAAMC,OAAOnD,GAC5BkH,SAAUc,EACVvG,OAAQ,cART0G,EA5Bc,sBAuCGtD,YAAY2C,GAAuB,CACvDlG,YAAa,WACTqG,EAAS,2BAAKjB,GAAN,IAAajF,OAAQ,aAEjCiB,UAAW,CACPkF,QAASvI,EAAM6D,MAAMC,OAAOnD,GAC5BkH,SAAUc,EACVvG,OAAQ,YAPT2G,EAvCc,oBA+DrB,OAAK1B,EAID,kBAAC,GAAD,KACI,kBAAC9L,EAAA,EAAD,CAAWD,UAAW6E,KAAQ6I,eAE1B,wBAAIjK,MAAO,CAAE6B,aAAc,OAAQsD,WAAY,OAAQhF,MAAO,UAA9D,aACemI,EAAM5F,KAErB,kBAACjG,EAAA,EAAD,CAAKF,UAAW6E,KAAQ8I,gBACpB,kBAAChJ,EAAA,EAAD,CAAKC,GAAG,KACJ,yBAAKd,MAAM,MAAMmB,IAAK8G,EAAM9F,QAAQf,SAAUC,IAAI,SAGtD,kBAACR,EAAA,EAAD,KACI,kBAAC,GAAD,CAAY+H,KAAK,UAAU7E,MAAOkE,EAAM9F,QAAQjE,QAChD,kBAAC,GAAD,CAAY0K,KAAK,aAAa7E,MAAO,kBAAC,GAAD,KAAckE,EAAMO,QACzD,kBAACpM,EAAA,EAAD,CAAKuD,MAAO,CAAEgF,WAAY,OAAQC,cAAe,OAAQxE,QAAS,OAAQoF,WAAY,WAClF,kBAAC3E,EAAA,EAAD,CAAKC,GAAG,KACJ,wBAAInB,MAAO,CAAEC,OAAQ,EAAGkF,WAAY,OAAQC,SAAU,SAAtD,cAIJ,kBAAClE,EAAA,EAAD,CAAKlB,MAAO,CAAES,QAAS,OAAQa,eAAgB,aAEvCoI,EACI,kBAAC3F,EAAA,EAAD,CAAO/D,MAAO,CAAEK,MAAO,OAASH,KAAK,SAASiK,IAAK,EAAGvE,aAAc0C,EAAMQ,SAAUsB,SAAU,SAAC5F,GAAQqF,GAAkBrF,EAAE6F,OAAOjG,UAElI,wBAAIpE,MAAO,CAAEC,OAAQ,EAAGkF,WAAY,QAE/BmD,EAAMQ,WAKvB,kBAAC5H,EAAA,EAAD,CAAKC,GAAG,KAEAuI,GACA,6BACI,kBAACnJ,EAAA,EAAD,CAAQJ,MAAM,OAAOH,MAAO,CAAEC,OAAQ,QAAUpB,QAAS,kBArDzFiL,SACAH,GAAqB,KAoDW,QAGA,kBAACpJ,EAAA,EAAD,CAAQP,MAAO,CAAEC,OAAQ,QAAUpB,QAAS,WAAQgL,EAAiBvB,EAAMQ,UAAWa,GAAqB,KAA3G,aAOhB,kBAAC,GAAD,CAAYV,KAAK,cAAc7E,MAAOkE,EAAM9F,QAAQV,MAAQ8H,EAAgB,MAGvD,WAAjBtB,EAAMjF,OACF,kBAAC,GAAD,CAAY4F,KAAK,SAAS7E,MAAO,iBAAkB8E,KAAK,uBAAuBC,UAAU,UAExE,WAAjBb,EAAMjF,OACF,kBAAC,GAAD,CAAY4F,KAAK,SAAS7E,MAAO,iBAAkB8E,KAAK,uBAAuBC,UAAU,WAEzF,kBAAC,GAAD,CAAYF,KAAK,SAAS7E,MAAO,mBAAoB8E,KAAK,YAAYC,UAAU,UAOlF,WAAjBb,EAAMjF,QACH,kBAAC5G,EAAA,EAAD,CAAKuD,MAAO,CAAEe,UAAW,SACrB,kBAACG,EAAA,EAAD,CAAKlB,MAAO,CAAES,QAAS,OAAQa,eAAgB,WAC3C,kBAACf,EAAA,EAAD,CAAQJ,MAAM,SAASH,MAAO,CAAEC,OAAQ,QAAUpB,QA/E/C,WAEvBkL,MA6EoB,UAGA,kBAACxJ,EAAA,EAAD,CAAQJ,MAAM,OAAOH,MAAO,CAAEC,OAAQ,QAAUpB,QAAS,kBAAM8K,GAAsBD,KAArF,QAGA,kBAACnJ,EAAA,EAAD,CAAQJ,MAAM,UAAUH,MAAO,CAAEC,OAAQ,QAAUpB,QAhF9C,WAEzBmL,MA8EoB,gBA1Eb,kBAAC,EAAD,OCzFAM,OAhBf,WACI,OACI,yBACI/N,UAAU,gBACVyD,MAAO,CACHI,OAAQ,QACRmK,oBAAqB,QACrBC,oBAAqB,SACrBC,gBACI,OAASC,EAAQ,KAA8B,Q,gNCRnE,IAAMC,GAA4B3I,IAAH,MAsDhB4I,GAxCI,SAAC3J,GAAW,IAAD,EAEArE,IAAMK,SAASsG,aAAasH,QAAQ,UAFpC,mBAEnB9N,EAFmB,KAEZ0G,EAFY,OAGAvB,YAASyI,IAA3BvI,EAHkB,EAGlBA,KAAMD,EAHY,EAGZA,QAHY,EAIEvF,IAAMK,SAAS,IAJjB,mBAInB+K,EAJmB,KAIXC,EAJW,OAKFrL,IAAMK,SAAS,MALb,mBAKnBmC,EALmB,KAKbkE,EALa,KAQ1B1G,IAAMa,WAAU,WACP0E,GACDmB,EAAQlB,EAAK0I,iBAAiB1L,QAGnC,CAAC+C,EAASC,IAUb,OACI,kBAAC5E,EAAcuN,SAAf,CAAwB3G,MAAO,CAC3BrH,MAAOA,EACP0G,SAAUA,EACVrE,KAAMA,EACNkE,QAASA,EACTvD,eAdkB,WAEtBuD,EAAQ,MACRG,EAAS,MACTF,aAAayH,WAAW,UAWpB/C,UAAWA,EACXD,OAAQA,IAEP/G,EAAMsG,W,m6BC3CnB,IAAM5C,GAAsB3C,IAAH,MAkBnBiJ,GAAyBjJ,IAAH,MAiGbkJ,GA5EE,SAACjK,GAEd,IAAM3D,EAAUV,IAAMW,WAAWC,GAC3BqF,EAAUC,cAHQ,EAIOlG,IAAMK,SAAS,GAJtB,mBAIjB6L,EAJiB,KAIPqC,EAJO,OAMEjJ,YAASyC,GAC/B,CACIL,UAAW,CACPO,UAAW5D,EAAM6D,MAAMC,OAAOnD,MAHlCQ,EANgB,EAMhBA,KAAMD,EANU,EAMVA,QANU,EAaDsE,YAAYwE,GAAwB,CACvDG,OADuD,SAChDC,EAAOlI,GACV7F,EAAQ2K,UAAR,uBAAsB3K,EAAQ0K,QAA9B,CAAsC7E,EAASf,KAAKkJ,aAAahD,SACjEzF,EAAQa,KAAR,iBAAuBP,EAASf,KAAKkJ,aAAahD,MAAM5F,OAE5DkE,QAAS,SAAAC,GACLH,QAAQC,IAAIE,IAEhBvC,UAAW,CACPO,UAAW5D,EAAM6D,MAAMC,OAAOnD,GAC9BkH,SAAUA,KAVXwC,EAbiB,oBAkCxB,OAAInJ,EACO,kBAAC,EAAD,MAEP,kBAAC3F,EAAA,EAAD,CAAWD,UAAW6E,KAAQ6I,eAC1B,wBAAIjK,MAAO,CAAE6B,aAAc,OAAQsD,WAAY,OAAQhF,MAAO,UAA9D,cACgBc,EAAM6D,MAAMC,OAAOnD,IAEnC,kBAACnF,EAAA,EAAD,CAAKF,UAAW6E,KAAQ8I,gBACpB,kBAAChJ,EAAA,EAAD,CAAKC,GAAG,KACJ,yBAAKd,MAAM,MAAMmB,IAAKY,EAAK8C,WAAW1C,QAAQf,SAAUC,IAAI,SAGhE,kBAACR,EAAA,EAAD,KACI,kBAAC,GAAD,CAAY+H,KAAK,UAAU7E,MAAOhC,EAAK8C,WAAW1C,QAAQjE,QAC1D,kBAAC9B,EAAA,EAAD,CAAKuD,MAAO,CAAEgF,WAAY,OAAQC,cAAe,OAAQxE,QAAS,OAAQoF,WAAY,WAClF,kBAAC3E,EAAA,EAAD,CAAKC,GAAG,KACJ,wBAAInB,MAAO,CAAEC,OAAQ,EAAGkF,WAAY,OAAQC,SAAU,SAAtD,cAIJ,kBAAClE,EAAA,EAAD,CAAKlB,MAAO,CAAES,QAAS,OAAQa,eAAgB,WAC3C,kBAACyC,EAAA,EAAD,CAAO7D,KAAK,SAASkK,SAAU,SAAC5F,GAAQ2G,GAAY3G,EAAE6F,OAAOjG,QAAUpE,MAAO,CAAEC,OAAQ,EAAGkF,WAAY,MAAO9E,MAAO,OAASuF,aAAckD,EAAUqB,IAAK,MAInK,kBAAC,GAAD,CAAYlB,KAAK,cAAc7E,MAAO0E,EAAW1G,EAAK8C,WAAW1C,QAAQV,MAAQ,QAGzF,kBAACrF,EAAA,EAAD,CAAKuD,MAAO,CAAEe,UAAW,SACrB,kBAACG,EAAA,EAAD,CAAKlB,MAAO,CAAES,QAAS,OAAQa,eAAgB,WAC3C,kBAACf,EAAA,EAAD,CAAQJ,MAAM,SAASH,MAAO,CAAEC,OAAQ,SAAxC,UAGA,kBAACM,EAAA,EAAD,CAAQJ,MAAM,UAAUH,MAAO,CAAEC,OAAQ,QAAUpB,QAzCpC,WAEtBvB,EAAQP,OACT8F,EAAQa,KAAK,WACjB4H,MAqCY,gBC7FdC,GAAWC,aAAe,CAC5BC,IAAK,kCAGHC,GAAWC,cAAW,SAACC,EAAD,GAAqB,IAAfC,EAAc,EAAdA,QACxB9O,EAAQwG,aAAasH,QAAQ,SACnC,MAAO,CACHgB,QAAQ,2BACDA,GADA,IAEHC,cAAe/O,EAAK,iBAAaA,GAAU,SAKjDgP,GAAS,IAAIC,KAAa,CAC5BC,KAAMP,GAASQ,OAAOX,IACtBY,MAAO,IAAIC,OA6BAC,GA1BH,WACR,OAEI,kBAAC,KAAD,CAAgBN,OAAQA,IACpB,kBAAC,GAAD,KACI,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOO,KAAK,QAAQC,UAAWtK,IAC/B,kBAAC,IAAD,CAAOqK,KAAK,SAASC,UAAW3J,IAChC,kBAAC,IAAD,CAAO0J,KAAK,UAAUC,UAAW7H,IACjC,kBAAC,IAAD,CAAO4H,KAAK,eAAeC,UAAW3H,IACtC,kBAAC,IAAD,CAAO0H,KAAK,WAAWC,UAAWjG,KAClC,kBAAC,IAAD,CAAOgG,KAAK,UAAUC,UAAWxE,KACjC,kBAAC,IAAD,CAAOuE,KAAK,gBAAgBC,UAAWrB,KACvC,kBAAC,IAAD,CAAOoB,KAAK,aAAaC,UAAWjD,KACpC,kBAAC,IAAD,CAAU9K,GAAG,YAGrB,kBAAC,EAAD,S,qBClDhBgO,IAASC,OAAO,kBAAC,GAAD,MACZ9O,SAASwG,eAAe,U,mBCZ5B/H,EAAOC,QAAU,CAAC,YAAc,iCAAiC,SAAW,8BAA8B,aAAe,oC,mBCAzHD,EAAOC,QAAU,CAAC,cAAgB,6BAA6B,eAAiB,gC,mBCAhFD,EAAOC,QAAU,CAAC,cAAgB,6BAA6B,eAAiB,iC","file":"static/js/main.397ffb24.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainHome\":\"Home_mainHome__25zOJ\"};","module.exports = __webpack_public_path__ + \"static/media/headerpic.4fb45315.png\";","\n/*eslint-disable*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Row, Container } from \"reactstrap\";\n\nfunction Footer() {\n    return (\n        <footer className=\"footer footer-black footer-white\">\n            <Container>\n                <Row>\n                    <div className=\"credits ml-auto\">\n                        <span className=\"copyright\">\n                            © {new Date().getFullYear()}, made with{\" \"}\n                            <i className=\"fa fa-heart heart\" /> by Amir GHEDIRA\n                        </span>\n                    </div>\n                </Row>\n            </Container>\n        </footer>\n    );\n}\n\nexport default Footer;\n","import React from 'react'\n\n\nexport default React.createContext({\n    products: [],\n    token: null\n})","\nimport React from \"react\";\n// nodejs library that concatenates strings\nimport classnames from \"classnames\";\n// reactstrap components\nimport {\n    Button,\n    Collapse,\n    NavbarBrand,\n    Navbar,\n    NavItem,\n    Nav,\n    Container,\n    UncontrolledDropdown,\n    DropdownMenu,\n    DropdownToggle,\n    DropdownItem\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport GlobalContext from '../../Context/GlobalContext'\nimport Loader from 'react-loader-spinner'\nfunction IndexNavbar() {\n    const [navbarColor, setNavbarColor] = React.useState(\"navbar-transparent\");\n    const [navbarCollapse, setNavbarCollapse] = React.useState(false);\n    const context = React.useContext(GlobalContext)\n\n\n    const toggleNavbarCollapse = () => {\n        setNavbarCollapse(!navbarCollapse);\n        document.documentElement.classList.toggle(\"nav-open\");\n    };\n\n    React.useEffect(() => {\n        const updateNavbarColor = () => {\n            if (\n                document.documentElement.scrollTop > 299 ||\n                document.body.scrollTop > 119\n            ) {\n                setNavbarColor(\"\");\n            } else if (\n                document.documentElement.scrollTop < 300 ||\n                document.body.scrollTop < 120\n            ) {\n                setNavbarColor(\"navbar-transparent\");\n            }\n        };\n\n        window.addEventListener(\"scroll\", updateNavbarColor);\n\n        return function cleanup() {\n            window.removeEventListener(\"scroll\", updateNavbarColor);\n        };\n    });\n    return (\n        <Navbar className={classnames(\"fixed-top\", navbarColor)} expand=\"lg\">\n            <Container>\n                <div className=\"navbar-translate\">\n                    <NavbarBrand\n                        data-placement=\"bottom\"\n                        title=\"Coded by Creative Tim\"\n                        to=\"/home\"\n                        tag={Link}\n                    >\n                        E-Commerce\n                     </NavbarBrand>\n\n                    <button\n                        aria-expanded={navbarCollapse}\n                        className={classnames(\"navbar-toggler navbar-toggler\", {\n                            toggled: navbarCollapse,\n                        })}\n                        onClick={toggleNavbarCollapse}\n                    >\n                        <span className=\"navbar-toggler-bar bar1\" />\n                        <span className=\"navbar-toggler-bar bar2\" />\n                        <span className=\"navbar-toggler-bar bar3\" />\n                    </button>\n                </div>\n                <Collapse\n                    className=\"justify-content-end\"\n                    navbar\n                    isOpen={navbarCollapse}\n                >\n                    {context.token ?\n                        <Nav navbar>\n                            {\n\n                                context.user ?\n                                    <UncontrolledDropdown nav inNavbar>\n                                        <DropdownToggle nav caret>\n                                            {context.user.username}\n                                        </DropdownToggle>\n                                        <DropdownMenu right>\n                                            <DropdownItem tag={Link} to=\"/orders\">\n                                                Orders\n                                            </DropdownItem>\n                                            <DropdownItem tag={Link} to={`/profile`}>\n                                                Settings\n                                    </DropdownItem>\n                                            <DropdownItem divider />\n                                            <DropdownItem onClick={context.disconnectUser}>\n                                                <strong>Disconnect</strong>\n                                            </DropdownItem>\n                                        </DropdownMenu>\n                                    </UncontrolledDropdown>\n                                    :\n                                    <Loader\n                                        style={{ margin: 'auto' }}\n                                        type=\"Rings\"\n                                        color=\"#00BFFF\"\n                                        height={50}\n                                        width={50}\n\n                                    />\n                            }\n                        </Nav>\n\n                        :\n                        <Nav navbar>\n                            <NavItem>\n                                <Link to=\"/login\">\n                                    <Button\n                                        className=\"btn-round\"\n                                        color=\"warning\"\n                                    >\n                                        Login\n                             </Button>\n\n                                </Link>\n                            </NavItem>\n                            <NavItem>\n                                <Link to=\"/signup\">\n                                    <Button\n                                        className=\"btn-round\"\n                                        color=\"danger\"\n                                    >\n                                        Sign Up\n                             </Button>\n\n                                </Link>\n                            </NavItem>\n                        </Nav>}\n                </Collapse>\n            </Container>\n        </Navbar>\n    );\n}\n\nexport default IndexNavbar;\n","import React from 'react'\nimport Loader from 'react-loader-spinner'\n\nconst Loading = () => {\n    return (\n        <div style={{ display: 'flex', backgroundColor: 'rgba(0,0,0,0.4)', position: 'fixed', top: '0', left: '0', width: '100vw', height: '100vh', zIndex: '1000' }}>\n            <Loader\n                style={{ margin: 'auto', marginTop: '400px' }}\n                type=\"ThreeDots\"\n                color=\"#00BFFF\"\n                height={75}\n                width={75}\n\n            />\n        </div>\n    )\n}\n\nexport default Loading\n","import React from 'react'\nimport { Col, Button } from 'reactstrap'\nimport { Link } from 'react-router-dom'\nimport classes from './ProductCard.module.css'\nconst ProductCard = (props) => {\n    return (\n        <Col xs='3' className={classes.cardProduct}>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <img className={classes.productImage} src={props.imageUrl} alt=\"...\" />\n            </div>\n            <div style={{ marginTop: '20px', display: 'flex', justifyContent: 'center', alignContent: 'center' }} >\n                <div>\n                    <Link to={`/product/${props.id}`}>\n                        <h4 style={{ display: 'flex', justifyContent: 'center', marginBottom: '20px' }}>\n                            <strong>{props.title}</strong>\n                        </h4>\n                    </Link>\n                    <h6 style={{ display: 'flex', justifyContent: 'center', marginBottom: '20px' }}>{props.price}$</h6>\n                    <Button color=\"success\" style={{ display: 'flex', margin: 'auto', width: '110px' }} tag={Link} to={`/purchase/${props.id}`}>\n                        Purchace\n                    </Button>\n                </div>\n\n            </div>\n        </Col>\n    )\n}\n\nexport default ProductCard\n","import React from 'react'\nimport { Container, Row } from 'reactstrap'\nimport classes from './Home.module.css'\nimport { useQuery } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\nimport Loading from 'components/Loading/Loading'\nimport ProductCard from './ProductCard/ProductCard'\n\n\nconst FETCH_PRODUCTS_QUERY = gql`\n  {\n  getProducts{\n    products{\n      _id\n      imageUrl\n      title\n      price\n      available\n      description\n    }\n  }\n  }\n`;\nconst Home = () => {\n\n    const { loading, data } = useQuery(FETCH_PRODUCTS_QUERY)\n\n    return (\n        <div className={classes.mainHome}>\n            <Container>\n                {loading ?\n                    <Loading />\n                    :\n                    <Row>\n                        {data.getProducts.products.map(product => {\n                            return (\n\n                                <ProductCard key={product._id} title={product.title} imageUrl={product.imageUrl} id={product._id} price={product.price} />\n                            )\n                        })}\n                    </Row>}\n            </Container>\n        </div>\n\n    )\n}\n\nexport default Home","import React from 'react'\nimport { Container, Row, Col, Button, Form, Card, Input } from 'reactstrap'\nimport GlobalContext from '../../Context/GlobalContext'\nimport { useLazyQuery } from \"react-apollo\"\nimport { useHistory } from 'react-router-dom'\nimport gql from 'graphql-tag'\n\n\nconst LOGIN_USER_QUERY = gql`\nquery(\n  $username:String!\n  $password:String!  \n){\n  userLogin(username:$username,password:$password){\n    \n    status\n    token\n    user{\n      username\n      email\n      address\n      phone\n    }\n    \n  }\n}\n`;\n\nconst Login = () => {\n\n    const context = React.useContext(GlobalContext)\n    const history = useHistory();\n    const [errorLogin, setErrorLogin] = React.useState('')\n\n    const [loginUser] = useLazyQuery(LOGIN_USER_QUERY, {\n        onCompleted: response => {\n            if (response.userLogin.status !== 200)\n                setErrorLogin('wrong credentials')\n            else {\n                context.setUser(response.userLogin.user)\n                localStorage.setItem('token', response.userLogin.token)\n                context.setToken(response.userLogin.token)\n                history.push(\"/home\")\n            }\n        }\n    })\n\n    const loginHandler = () => {\n        const username = document.getElementById('username').value\n        const password = document.getElementById('password').value\n        // loginUser({})\n        loginUser({\n            variables: {\n                username,\n                password\n            }\n        })\n    }\n    return (\n        <div>\n            <div>\n                <div className=\"filter\" />\n                <Container style={{ marginTop: '100px' }}>\n                    <Row>\n                        <Col className=\"ml-auto mr-auto\" lg=\"4\">\n                            <Card className=\"card-register ml-auto mr-auto\">\n                                <h3 className=\"title mx-auto\">Welcome</h3>\n                                <Form className=\"register-form\">\n                                    <label>Username</label>\n                                    <Input placeholder=\"Username\" id=\"username\" type=\"text\" onClickCapture={() => setErrorLogin('')} />\n                                    <label>Password</label>\n                                    <Input placeholder=\"Password\" id=\"password\" type=\"password\" onClickCapture={() => setErrorLogin('')} />\n                                    <label style={{ display: 'flex', justifyContent: 'center' }}>{errorLogin}</label>\n                                    <Button block className=\"btn-round\" color=\"danger\" onClick={loginHandler}>\n                                        Login\n                                   </Button>\n\n                                </Form>\n                                <div className=\"forgot\">\n                                    <Button\n                                        className=\"btn-link\"\n                                        color=\"danger\"\n                                        href=\"#pablo\"\n                                        onClick={(e) => e.preventDefault()}\n                                    >\n                                        Forgot password?\n                  </Button>\n                                </div>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n\n            </div>\n        </div>\n    )\n}\n\n\nexport default Login","import React from 'react'\nimport { Container, Row, Col, Button, Form, Card, Input } from 'reactstrap'\n\n\nconst SignUp = () => {\n\n    return (\n        <div>\n            <div>\n                <div className=\"filter\" />\n                <Container style={{ marginTop: '100px' }}>\n                    <Row>\n                        <Col className=\"ml-auto mr-auto\" lg=\"4\">\n                            <Card className=\"card-register ml-auto mr-auto\">\n                                <h3 className=\"title mx-auto\">Welcome</h3>\n                                <Form className=\"register-form\">\n                                    <label>Username</label>\n                                    <Input placeholder=\"Username\" type=\"text\" />\n                                    <label>Email</label>\n                                    <Input placeholder=\"Email\" type=\"text\" />\n                                    <label>Password</label>\n                                    <Input placeholder=\"Password\" type=\"password\" />\n                                    <label>Re-Password</label>\n                                    <Input placeholder=\"Repassword\" type=\"password\" />\n                                    <label>Phone number</label>\n                                    <Input placeholder=\"N Phone\" type=\"text\" />\n                                    <label>Address</label>\n                                    <Input placeholder=\"Address\" type=\"text\" />\n                                    <Button block className=\"btn-round\" color=\"danger\">\n                                        Register\n                                   </Button>\n                                </Form>\n                                <div className=\"forgot\">\n                                    <Button\n                                        className=\"btn-link\"\n                                        color=\"danger\"\n                                        href=\"#pablo\"\n                                        onClick={(e) => e.preventDefault()}\n                                    >\n                                        Forgot password?\n                  </Button>\n                                </div>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n\n            </div>\n        </div>\n    )\n}\n\nexport default SignUp","import React from 'react'\nimport { Container, Row, Col, Button } from 'reactstrap'\nimport gql from 'graphql-tag'\nimport { useQuery } from '@apollo/react-hooks'\nimport Loading from 'components/Loading/Loading';\nimport { Link } from 'react-router-dom';\n\nconst FETCH_PRODUCT_QUERY = gql`\n\n   query getProduct(\n\n       $productId:String!\n   ){\n       getProduct(productId:$productId){\n           product{\n               _id\n               title\n               description\n               price\n               imageUrl\n               available\n           }\n       }\n\n   }\n\n\n`;\nconst Product = (props) => {\n\n    const { data, loading } = useQuery(FETCH_PRODUCT_QUERY, {\n        variables: {\n            productId: props.match.params.id\n        }\n    })\n    return (\n        <div>\n            <div>\n                <Container style={{ paddingTop: '100px', paddingBottom: '100px' }}>\n                    {loading ?\n                        <Loading />\n                        :\n\n                        <Row>\n                            <Col xs=\"4\">\n                                <img width=\"400\" src={data.getProduct.product.imageUrl} alt=\"...\" />\n                                <div style={{ display: 'flex', justifyContent: 'center' }}>\n                                    <h5 style={{ fontWeight: 'bold', fontSize: '14px' }}> Price: {data.getProduct.product.price}$</h5>\n                                </div>\n                            </Col>\n                            <Col xs=\"8\">\n                                <div style={{ marginTop: '40px', display: 'flex', justifyContent: 'center' }}>\n                                    <h4 style={{ fontWeight: 500 }}>{data.getProduct.product.title}</h4>\n                                </div>\n                                <pre style={{ display: 'flex', justifyContent: 'center', minHeight: '150px', marginTop: '40px', whiteSpace: 'pre-wrap', paddingLeft: '20px', paddingRight: '20px' }}>\n                                    {data.getProduct.product.description}\n                                </pre>\n                                <div style={{ display: 'flex', justifyContent: 'center' }}>\n                                    <Button color=\"success\" tag={Link} to={`/purchase/${data.getProduct.product._id}`}>\n                                        Purchase\n                                </Button>\n\n                                </div>\n                            </Col>\n                        </Row>}\n\n                </Container>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Product\n","import React from 'react'\nimport { Row, Col, Input, Button } from 'reactstrap'\n\n\nconst ProfileField = (props) => {\n\n    const [status, setStatus] = React.useState(false)\n    return (\n        <Row style={{ paddingTop: '50px', paddingLeft: '50px' }}>\n            <Col xs=\"2\" style={{ display: 'flex' }}>\n                <h5 style={{ fontWeight: 'bold', fontSize: '15px', margin: 'auto' }}>{props.title}</h5>\n            </Col>\n            <Col xs={status ? '7' : '9'} style={{ display: 'flex', justifyContent: 'center' }}>\n\n                <div>\n                    {status ?\n                        props.password ?\n                            <div>\n                                <Input style={{ margin: 'auto', fontSize: '16px' }} placeholder=\"password\" type={props.type} />\n                                <Input style={{ margin: 'auto', fontSize: '16px' }} placeholder=\"Re-enter password\" type={props.type} />\n\n                            </div>\n                            :\n                            <Input id={props.id} style={{ margin: 'auto', fontSize: '16px' }} defaultValue={props.value} type={props.type} />\n                        :\n                        <h6 id={props.id} style={{ margin: 'auto' }}>{props.value}</h6>\n                    }\n\n                </div>\n\n            </Col>\n            <Col style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }}>\n\n                {status ? <div style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }}>\n                    <Button color=\"success\" style={{ marginLeft: '20px', marginRight: '10px' }}\n                        onClick={() => {\n                            setStatus(false);\n                            props.updateUser({\n                                username: document.getElementById('username').value,\n                                phone: document.getElementById('phone').value,\n                                email: document.getElementById('email').value,\n                                address: document.getElementById('address').value,\n\n                            })\n                        }}>\n                        Save\n                    </Button>\n                    <Button color=\"danger\" onClick={() => { setStatus(false) }}>\n                        Cancel\n                            </Button>\n                </div>\n                    :\n                    <i style={{ fontSize: '20px', color: 'black' }} className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"\n                        onClick={() => { setStatus(true) }}\n                    ></i>}\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileField\n","import React from 'react'\nimport { Container } from 'reactstrap'\nimport ProfileField from './ProfileField/ProfileField'\nimport gql from 'graphql-tag'\nimport { useMutation } from 'react-apollo';\nimport GlobalContext from '../../Context/GlobalContext'\nimport Loading from 'components/Loading/Loading';\n\nconst UPDATE_USERINFO_MUTATION = gql`\n\n    mutation($username:String!,$email:String!,$address:String!,$phone:String!){\n        updateUser(updateUserInput:{\n            username:$username\n            email:$email\n            phone:$phone\n            address:$address\n        }){\n            user{\n              _id\n            }\n        }\n    }\n`;\n\nconst Profile = () => {\n\n    const context = React.useContext(GlobalContext)\n    const [userInfo, setUserInfo] = React.useState(null)\n\n    React.useEffect(() => {\n        if (context.token && context.user)\n            setUserInfo(context.user)\n\n    }, [context.token, context.user])\n    const [updateUserInfo] = useMutation(UPDATE_USERINFO_MUTATION, {\n        onCompleted: data => {\n            console.log(data)\n        },\n        onError: err => {\n            console.log(err)\n        }\n    })\n\n    const updateUserNameHandler = (newUserInfos) => {\n        updateUserInfo({ variables: { ...userInfo, username: newUserInfos.username } })\n        setUserInfo({ ...userInfo, username: newUserInfos.username })\n\n    }\n    const updateEmailHandler = (newUserInfos) => {\n        updateUserInfo({ variables: { ...userInfo, email: newUserInfos.email } })\n        setUserInfo({ ...userInfo, email: newUserInfos.email })\n\n    }\n    const updateAddressHandler = (newUserInfos) => {\n        updateUserInfo({ variables: { ...userInfo, address: newUserInfos.address } })\n        setUserInfo({ ...userInfo, address: newUserInfos.address })\n\n    }\n    const updatePasswordHandler = (newUserInfos) => {\n        // updateUserInfo({ variables: { updateUserInput: { ...userInfo , } } })\n    }\n    const updatePhoneHandler = (newUserInfos) => {\n        updateUserInfo({ variables: { ...userInfo, phone: newUserInfos.phone } })\n        setUserInfo({ ...userInfo, phone: newUserInfos.phone })\n\n    }\n    if (!userInfo)\n        return <Loading />\n    return (\n        <div>\n            <Container>\n                <h2>Update Profile</h2>\n                <div style={{ paddingTop: '50px', paddingBottom: '50px' }}>\n                    <ProfileField id=\"username\" title=\"Username\" value={userInfo.username} type=\"text\" updateUser={updateUserNameHandler} />\n                    <ProfileField id=\"email\" title=\"Email\" value={userInfo.email} type=\"text\" updateUser={updateEmailHandler} />\n                    <ProfileField id=\"password\" title=\"Password\" password value=\"*******\" type='password' updateUser={updatePasswordHandler} />\n                    <ProfileField id=\"phone\" title=\"Phone Number\" value={userInfo.phone} type='number' updateUser={updatePhoneHandler} />\n                    <ProfileField id=\"address\" title=\"address\" value={userInfo.address} type='textarea' updateUser={updateAddressHandler} />\n                </div>\n\n            </Container>\n\n        </div>\n    )\n}\n\nexport default Profile\n","import React from 'react'\nimport Moment from 'react-moment'\n\nconst FormateDate = (props) => {\n    const nowday = + new Date().toISOString().split('T')[0].split('-')[2];\n    const nowyear = + new Date().toISOString().split('T')[0].split('-')[0];\n    const nowhour = + new Date().toISOString().split('T')[1].split(':')[0];\n    const day = + props.children.split('T')[0].split('-')[2]\n    const year = + props.children.split('T')[0].split('-')[0];\n    const hour = + props.children.split('T')[1].split(':')[0];\n\n    if (year === nowyear) {\n        if (day === nowday)\n            if (hour - nowhour > 12)\n                return (\n                    <React.Fragment>\n                        Today{', '}\n                        <Moment format=\"HH:MM\">{props.children}</Moment>\n                    </React.Fragment>\n\n                )\n            else\n                return (\n                    <Moment fromNow>{props.children}</Moment>\n                )\n        else if (day === nowday - 1)\n            return (\n                <React.Fragment>\n                    Yesterday{', '}\n                    <Moment format=\"HH:MM\">{props.children}</Moment>\n                </React.Fragment>)\n\n        else\n            return (<Moment format=\"DD MMMM, HH:MM \">{props.children}</Moment>)\n    }\n    else\n        return (\n            <Moment format=\"DD MMMM YYYY, \">{props.children}</Moment>\n        )\n}\n\nexport default FormateDate;","import GlobalContext from '../Context/GlobalContext'\nimport React from 'react'\nimport { Redirect } from 'react-router-dom'\n\n\n\nconst AuthGuard = (props) => {\n    const context = React.useContext(GlobalContext)\n    if (context.token !== null)\n        return props.children\n\n    return <Redirect to=\"/login\" />\n}\n\n\nexport default AuthGuard","import React, { useContext } from 'react'\nimport { Table, Container, Row, Button, Col } from 'reactstrap'\nimport { Link } from 'react-router-dom'\nimport gql from 'graphql-tag'\nimport { useQuery } from 'react-apollo';\nimport Loading from 'components/Loading/Loading';\nimport FormateDate from 'components/FormatDate/FormatDate';\nimport GlobalContext from '../../Context/GlobalContext'\nimport AuthGuard from '../../utils/AuthGuard'\nconst FETCH_ORDERS_QUERY = gql`\n    query{\n        getUserOrders{\n            orders\n            {\n                _id\n                product\n                {\n                    title\n                    _id\n                }\n                totalPrice\n                quantity\n                date\n                status\n            }\n        }\n    }\n\n`;\nconst Orders = () => {\n\n    const context = useContext(GlobalContext)\n    const [orders, setOrders] = React.useState(null)\n    const { loading, data } = useQuery(FETCH_ORDERS_QUERY)\n    const [filterOption, setFilterOption] = React.useState(1)\n\n    React.useEffect(() => {\n        if (!loading) {\n\n            setOrders(data.getUserOrders.orders)\n            context.setOrders(data.getUserOrders.orders)\n        }\n    }, [loading, data, context])\n\n    React.useEffect(() => {\n        switch (filterOption) {\n            case 2:\n                {\n                    setOrders(context.orders.filter(order => order.status === 'pended'))\n                    break;\n                }\n            case 3:\n\n                {\n                    setOrders(context.orders.filter(order => order.status === 'passed'))\n                    break;\n                }\n            case 4:\n\n                {\n                    setOrders(context.orders.filter(order => order.status === 'canceled'))\n                    break;\n                }\n            default:\n                {\n                    setOrders(context.orders)\n                    break;\n                }\n        }\n    }, [filterOption, context.orders])\n\n\n    if (loading)\n        return <Loading />\n    return (\n\n        <AuthGuard>\n            <div>\n                <Container style={{ marginTop: '100px', marginBottom: '100px' }}>\n                    <Row style={{ marginTop: '20px', marginBottom: '40px' }}>\n                        <Col xs=\"12\" style={{ display: 'flex', justifyContent: 'center' }}>\n                            <Button color={filterOption === 1 ? \"info\" : null} style={{ margin: '20px' }} onClick={() => { setFilterOption(1) }}>\n                                All Orders\n                    </Button>\n                            <Button color={filterOption === 2 ? \"info\" : null} style={{ margin: '20px' }} onClick={() => { setFilterOption(2) }}>\n                                Pended Orders\n                    </Button>\n                            <Button color={filterOption === 3 ? \"info\" : null} style={{ margin: '20px' }} onClick={() => { setFilterOption(3) }}>\n                                Passed Orders\n                    </Button>\n                            <Button color={filterOption === 4 ? \"info\" : null} style={{ margin: '20px' }} onClick={() => { setFilterOption(4) }}>\n                                Canceled Orders\n                    </Button>\n                        </Col>\n                    </Row>\n                    <Table>\n                        <thead>\n                            <tr>\n                                <th>#</th>\n                                <th>Date</th>\n                                <th>Product</th>\n                                <th>Quantity</th>\n                                <th>Total price</th>\n                                <th>Status</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {orders.slice(0).reverse().map((order, index) => {\n\n                                return (\n                                    <tr key={order._id}>\n                                        <th scope=\"row\"><Link to={`/order/${order._id}`}><strong style={{ fontWeight: 'bold' }}>{orders.length - index}</strong></Link></th>\n                                        <td><FormateDate>{order.date}</FormateDate></td>\n                                        <td><Link to={`/product/${order.product._id}`}><strong style={{ fontWeight: 'bold' }}>{order.product.title}</strong></Link></td>\n                                        <td>{order.quantity}</td>\n                                        <td>{order.totalPrice} $</td>\n                                        <td>\n                                            {\n                                                order.status === 'passed' ?\n                                                    <i className=\"fa fa-check-circle-o\" style={{ fontSize: '26px', fontWeight: 'bold', color: 'green' }}></i>\n                                                    :\n                                                    order.status === 'pended' ?\n                                                        <i className=\"fa fa-times-circle-o\" style={{ fontSize: '26px', fontWeight: 'bold', color: 'yellow' }}></i>\n                                                        :\n                                                        <i className=\"fa fa-ban\" style={{ fontSize: '26px', fontWeight: 'bold', color: 'red' }}></i>\n\n                                            }\n                                        </td>\n                                    </tr>\n                                )\n                            })\n                            }\n                        </tbody>\n                    </Table>\n                </Container>\n            </div>\n        </AuthGuard>\n    )\n}\n\nexport default Orders\n","import React from 'react'\nimport { Row, Col } from 'reactstrap'\nconst OrderField = (props) => {\n    return (\n        <Row style={{ paddingTop: '10px', paddingBottom: '10px', display: 'flex', alignItems: 'center' }}>\n            <Col xs=\"3\">\n                <h4 style={{ margin: 0, fontWeight: 'bold', fontSize: '18px' }}>\n                    {props.name}:\n                </h4>\n            </Col>\n            <Col style={{ display: 'flex', justifyContent: 'center' }}>\n                <h5 style={{ margin: 0, fontWeight: '400' }}>\n                    {props.icon &&\n                        <i className={props.icon} style={{ fontSize: '26px', fontWeight: 'bold', color: props.iconColor, marginRight: '10px' }}></i>}\n                    {props.value}\n\n                </h5>\n            </Col>\n        </Row>\n    )\n}\n\nexport default OrderField\n","import React from 'react'\nimport { Container, Row, Col, Button, Input } from 'reactstrap'\n\nimport classes from './Order.module.css'\nimport OrderField from './OrderField/OrderField'\nimport Loading from 'components/Loading/Loading'\nimport gql from 'graphql-tag'\nimport { useQuery, useMutation } from 'react-apollo'\nimport FormateDate from 'components/FormatDate/FormatDate'\nimport AuthGuard from 'utils/AuthGuard'\n\n\nconst UPDATE_ORDER_MUTATION = gql`\n\n    mutation($orderId:String!,$quantity:Int!,$status:String!){\n        updateOrder(orderId:$orderId,quantity:$quantity,status:$status){\n            order{\n                _id\n            }\n        }\n    }\n`;\nconst FETCH_ORDER_QUERY = gql`\n\n    query($orderId:String!)\n    {\n        getOrder(orderId:$orderId)\n        {\n            status\n            order\n            {\n                _id\n                date\n                status\n                quantity\n                product\n                    {\n                        title\n                        imageUrl\n                        price\n                    }\n            }\n        }\n    }\n\n`;\nconst Order = (props) => {\n\n    const [order, setOrder] = React.useState(null)\n    useQuery(FETCH_ORDER_QUERY, {\n        variables:\n            { orderId: props.match.params.id },\n\n        onCompleted: response => {\n            console.log(response.getOrder)\n            setOrder(response.getOrder.order)\n\n        }\n    })\n\n    const [isEditingQuantity, setIsEdidingQuantity] = React.useState(false)\n\n    const [orderQuantity, setOrderQuantity] = React.useState(1)\n\n    const [updateQuantityOrder] = useMutation(UPDATE_ORDER_MUTATION, {\n        onCompleted: () => {\n            setOrder({ ...order, quantity: orderQuantity })\n        },\n        variables: {\n            orderId: props.match.params.id,\n            quantity: orderQuantity,\n            status: order?.status\n        }\n    })\n    const [cancelOrder] = useMutation(UPDATE_ORDER_MUTATION, {\n        onCompleted: () => {\n            setOrder({ ...order, status: 'canceled' })\n\n        },\n        variables: {\n            orderId: props.match.params.id,\n            quantity: orderQuantity,\n            status: 'canceled'\n        }\n    })\n    const [validateOrder] = useMutation(UPDATE_ORDER_MUTATION, {\n        onCompleted: () => {\n            setOrder({ ...order, status: 'passed' })\n        },\n        variables: {\n            orderId: props.match.params.id,\n            quantity: orderQuantity,\n            status: 'passed'\n        }\n    })\n    const saveOrderHandler = () => {\n        updateQuantityOrder()\n        setIsEdidingQuantity(false)\n    }\n    const cancelOrderHandler = () => {\n\n        cancelOrder()\n\n    }\n    const ValidateOrderHandler = () => {\n\n        validateOrder()\n\n    }\n    if (!order)\n        return <Loading />\n\n    return (\n        <AuthGuard>\n            <Container className={classes.mainContainer}>\n                {/* <Loading /> */}\n                <h4 style={{ marginBottom: '20px', fontWeight: 'bold', color: 'black' }}>\n                    Command: #{order._id}\n                </h4>\n                <Row className={classes.orderContainer}>\n                    <Col xs='4'>\n                        <img width=\"200\" src={order.product.imageUrl} alt=\"img\" />\n\n                    </Col>\n                    <Col>\n                        <OrderField name=\"Product\" value={order.product.title} />\n                        <OrderField name=\"Order date\" value={<FormateDate>{order.date}</FormateDate>} />\n                        <Row style={{ paddingTop: '10px', paddingBottom: '10px', display: 'flex', alignItems: 'center' }}>\n                            <Col xs=\"3\">\n                                <h4 style={{ margin: 0, fontWeight: 'bold', fontSize: '18px' }}>\n                                    Quantity:\n                             </h4>\n                            </Col>\n                            <Col style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                                {\n                                    isEditingQuantity ?\n                                        <Input style={{ width: '16%' }} type=\"number\" min={1} defaultValue={order.quantity} onChange={(e) => { setOrderQuantity(+e.target.value) }} />\n                                        :\n                                        <h5 style={{ margin: 0, fontWeight: '400' }}>\n\n                                            {order.quantity}\n\n                                        </h5>\n                                }\n                            </Col>\n                            <Col xs=\"4\" >\n                                {\n                                    isEditingQuantity &&\n                                    <div>\n                                        <Button color=\"info\" style={{ margin: '10px' }} onClick={() => saveOrderHandler()}>\n                                            Save\n                            </Button>\n                                        <Button style={{ margin: '10px' }} onClick={() => { setOrderQuantity(order.quantity); setIsEdidingQuantity(false); }}>\n                                            Cancel\n                            </Button>\n                                    </div>\n                                }\n                            </Col>\n                        </Row>\n                        <OrderField name=\"Total price\" value={order.product.price * orderQuantity + '$'} />\n                        {\n\n                            order.status === 'passed' ?\n                                <OrderField name=\"Status\" value={'Command Passed'} icon=\"fa fa-check-circle-o\" iconColor=\"green\" />\n                                :\n                                order.status === 'pended' ?\n                                    <OrderField name=\"Status\" value={'Command Pended'} icon=\"fa fa-times-circle-o\" iconColor=\"yellow\" />\n                                    :\n                                    <OrderField name=\"Status\" value={'Command Canceled'} icon=\"fa fa-ban\" iconColor=\"red\" />\n\n                        }\n\n                    </Col>\n                </Row>\n\n                {order.status === 'pended' &&\n                    <Row style={{ marginTop: '30px' }}>\n                        <Col style={{ display: 'flex', justifyContent: 'center' }}>\n                            <Button color=\"danger\" style={{ margin: '20px' }} onClick={cancelOrderHandler}>\n                                Cancel\n                    </Button>\n                            <Button color=\"info\" style={{ margin: '20px' }} onClick={() => setIsEdidingQuantity(!isEditingQuantity)}>\n                                Edit\n                    </Button>\n                            <Button color=\"success\" style={{ margin: '20px' }} onClick={ValidateOrderHandler}>\n                                Validate\n                </Button>\n                        </Col>\n                    </Row>}\n            </Container>\n        </AuthGuard>\n    )\n}\n\nexport default Order\n","\nimport React from \"react\";\n\n\n\nfunction IndexHeader() {\n    return (\n        <div\n            className=\"section-dark \"\n            style={{\n                height: '350px',\n                backgroundPositionX: '-50px',\n                backgroundPositionY: '-150px',\n                backgroundImage:\n                    \"url(\" + require(\"assets/img/headerpic.png\") + \")\",\n            }}\n        >\n        </div>\n    );\n}\n\nexport default IndexHeader;\n","import React from 'react'\nimport GlobalContext from 'Context/GlobalContext'\nimport gql from 'graphql-tag'\nimport { useQuery } from 'react-apollo'\n\n\nconst FETCH_CONNECTEDUSER_QUERY = gql`\nquery{\n  getConnectedUser{\n    user{\n      _id\n      username\n      email\n      phone\n      address\n    }   \n  }\n}\n`;\n\nconst AppContext = (props) => {\n\n    const [token, setToken] = React.useState(localStorage.getItem('token'))\n    const { data, loading } = useQuery(FETCH_CONNECTEDUSER_QUERY)\n    const [orders, setOrders] = React.useState([])\n    const [user, setUser] = React.useState(null)\n\n\n    React.useEffect(() => {\n        if (!loading) {\n            setUser(data.getConnectedUser.user)\n        }\n\n    }, [loading, data])\n\n    const disconnectHandler = () => {\n\n        setUser(null)\n        setToken(null)\n        localStorage.removeItem('token')\n\n    }\n\n    return (\n        <GlobalContext.Provider value={{\n            token: token,\n            setToken: setToken,\n            user: user,\n            setUser: setUser,\n            disconnectUser: disconnectHandler,\n            setOrders: setOrders,\n            orders: orders\n        }}>\n            {props.children}\n        </GlobalContext.Provider>\n    )\n}\n\n\n\nexport default AppContext","import React from 'react'\nimport { Container, Row, Col, Button, Input } from 'reactstrap'\nimport classes from './Order.module.css'\nimport OrderField from '../Order/OrderField/OrderField'\nimport Loading from 'components/Loading/Loading'\nimport { useQuery, useMutation } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport GlobalContext from '../../Context/GlobalContext'\nimport { useHistory } from 'react-router'\n\nconst FETCH_PRODUCT_QUERY = gql`\n    query($productId:String!)\n    {\n      getProduct(productId:$productId)\n        {\n            product\n            {\n                title\n                _id\n                description\n                price\n                imageUrl\n            }\n        }\n    }\n\n`;\n\nconst ORDER_PRODUCT_MUTATION = gql`\n    mutation($productId:String!,$quantity:Int!)\n    {\n        orderProduct(productId:$productId,quantity:$quantity)\n        {\n            order\n            {\n                _id\n                product\n                {\n                    title\n                    _id\n                }\n                totalPrice\n                quantity\n                date\n                status\n            }\n        }\n    }\n`;\nconst Purchase = (props) => {\n\n    const context = React.useContext(GlobalContext)\n    const history = useHistory()\n    const [quantity, setQuatity] = React.useState(1)\n\n    const { data, loading } = useQuery(FETCH_PRODUCT_QUERY,\n        {\n            variables: {\n                productId: props.match.params.id\n            }\n        })\n\n    const [orderProduct] = useMutation(ORDER_PRODUCT_MUTATION, {\n        update(proxy, response) {\n            context.setOrders([...context.orders, response.data.orderProduct.order])\n            history.push(`/order/${response.data.orderProduct.order._id}`)\n        },\n        onError: err => {\n            console.log(err)\n        },\n        variables: {\n            productId: props.match.params.id,\n            quantity: quantity\n        }\n    })\n    const validateCommandHandler = () => {\n\n        if (!context.token)\n            history.push('/login/')\n        orderProduct()\n\n\n    }\n    if (loading)\n        return <Loading />\n    return (\n        <Container className={classes.mainContainer}>\n            <h4 style={{ marginBottom: '20px', fontWeight: 'bold', color: 'black' }}>\n                Purchase: #{props.match.params.id}\n            </h4>\n            <Row className={classes.orderContainer}>\n                <Col xs='4'>\n                    <img width=\"200\" src={data.getProduct.product.imageUrl} alt=\"img\" />\n\n                </Col>\n                <Col>\n                    <OrderField name=\"Product\" value={data.getProduct.product.title} />\n                    <Row style={{ paddingTop: '10px', paddingBottom: '10px', display: 'flex', alignItems: 'center' }}>\n                        <Col xs=\"3\">\n                            <h4 style={{ margin: 0, fontWeight: 'bold', fontSize: '18px' }}>\n                                Quantity:\n                            </h4>\n                        </Col>\n                        <Col style={{ display: 'flex', justifyContent: 'center' }}>\n                            <Input type=\"number\" onChange={(e) => { setQuatity(+e.target.value) }} style={{ margin: 0, fontWeight: '400', width: '15%' }} defaultValue={quantity} min={1} />\n\n                        </Col>\n                    </Row>\n                    <OrderField name=\"Total Price\" value={quantity * data.getProduct.product.price + '$'} />\n                </Col>\n            </Row>\n            <Row style={{ marginTop: '30px' }}>\n                <Col style={{ display: 'flex', justifyContent: 'center' }}>\n                    <Button color=\"danger\" style={{ margin: '20px' }}>\n                        Cancel\n                    </Button>\n                    <Button color=\"success\" style={{ margin: '20px' }} onClick={validateCommandHandler}>\n                        Validate\n                </Button>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Purchase\n","\nimport React from \"react\";\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\n\n// pages\nimport Footer from 'components/Footers/Footer'\nimport NavBar from 'components/Navbars/IndexNavbar'\nimport Home from \"pages/Home/Home\";\nimport Login from \"pages/Login/Login\";\nimport SignUp from \"pages/Signup/Signup\";\nimport Product from \"pages/Product/Product\";\nimport Profile from \"pages/Profile/Profile\";\nimport Orders from \"pages/Orders/Orders\";\nimport Order from \"pages/Order/Order\";\nimport IndexHeader from \"components/Headers/IndexHeader\";\nimport { ApolloProvider } from 'react-apollo'\nimport AppContext from \"Context/AppContext\";\nimport { ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport Purchase from \"pages/Purchase/Purchase\";\n// others\n\n\nconst httpLink = createHttpLink({\n    uri: 'http://localhost:5000/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n    const token = localStorage.getItem('token');\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `Bearer ${token}` : \"\",\n        }\n    }\n});\n\nconst client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n});\n\nconst App = () => {\n    return (\n\n        <ApolloProvider client={client}>\n            <AppContext>\n                <BrowserRouter>\n                    <NavBar />\n                    <IndexHeader />\n                    <Switch>\n                        <Route path=\"/home\" component={Home} />\n                        <Route path=\"/login\" component={Login} />\n                        <Route path=\"/signup\" component={SignUp} />\n                        <Route path=\"/product/:id\" component={Product} />\n                        <Route path=\"/profile\" component={Profile} />\n                        <Route path=\"/orders\" component={Orders} />\n                        <Route path=\"/purchase/:id\" component={Purchase} />\n                        <Route path=\"/order/:id\" component={Order} />\n                        <Redirect to=\"/home\" />\n                    </Switch>\n                </BrowserRouter>\n                <Footer />\n            </AppContext>\n        </ApolloProvider>\n    )\n}\n\nexport default App;","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './App'\n\n// styles\nimport \"assets/css/bootstrap.min.css\";\nimport \"assets/scss/paper-kit.scss?v=1.2.0\";\nimport \"assets/demo/demo.css?v=1.2.0\";\n// pages\n// others\n\nReactDOM.render(<App />,\n    document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardProduct\":\"ProductCard_cardProduct__2zgks\",\"mainHome\":\"ProductCard_mainHome__2NEwd\",\"productImage\":\"ProductCard_productImage__3gZIb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Order_mainContainer__2vyiH\",\"orderContainer\":\"Order_orderContainer__1vS5c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Order_mainContainer__1QGTg\",\"orderContainer\":\"Order_orderContainer__3q71X\"};"],"sourceRoot":""}